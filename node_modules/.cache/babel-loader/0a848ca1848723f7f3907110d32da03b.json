{"ast":null,"code":"var _jsxFileName = \"/Users/alvarosanchezgalvan/Desktop/WorkSpace/poc-portal/src/ClientAdmin/ClientTrackerChart.js\";\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nconst axios = require('axios');\n\nfunction ClientTrackerChart(props) {\n  const [trackStats, setTrackStats] = useState([]);\n  const [clientId, setClientId] = useState(props.clientId);\n  useEffect(props => {\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    const clientUrl = params.get('client'); //We call the api\n\n    axios.get('http://localhost:8011/client-tracker/tracks-stats/' + clientUrl, {\n      headers: {}\n    }).then(function (response) {\n      setTrackStats(response.data);\n    }).catch(function (error) {// handle error\n    }).finally(function () {// always executed\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    width: 1000,\n    height: 300,\n    data: trackStats,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"value\",\n    stroke: \"#82ca9d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default ClientTrackerChart;","map":{"version":3,"sources":["/Users/alvarosanchezgalvan/Desktop/WorkSpace/poc-portal/src/ClientAdmin/ClientTrackerChart.js"],"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","axios","require","ClientTrackerChart","props","trackStats","setTrackStats","clientId","setClientId","search","window","location","params","URLSearchParams","clientUrl","get","headers","then","response","data","catch","error","finally","top","right","left","bottom"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SACIC,SADJ,EACeC,IADf,EACqBC,KADrB,EAC4BC,KAD5B,EACmCC,aADnC,EACkDC,OADlD,EAC2DC,MAD3D,QAES,UAFT;;AAGA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAC/B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAACW,KAAK,CAACG,QAAP,CAAxC;AAEAf,EAAAA,SAAS,CAAEY,KAAD,IAAW;AAEjB,UAAMK,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBF,MAA/B;AACA,UAAMG,MAAM,GAAG,IAAIC,eAAJ,CAAoBJ,MAApB,CAAf;AACA,UAAMK,SAAS,GAAGF,MAAM,CAACG,GAAP,CAAW,QAAX,CAAlB,CAJiB,CAMjB;;AACAd,IAAAA,KAAK,CAACc,GAAN,CAAU,uDAAqDD,SAA/D,EAA0E;AACtEE,MAAAA,OAAO,EAAE;AAD6D,KAA1E,EAIEC,IAJF,CAIO,UAAUC,QAAV,EAAoB;AAEvBZ,MAAAA,aAAa,CAACY,QAAQ,CAACC,IAAV,CAAb;AAEH,KARD,EAQGC,KARH,CAQS,UAAUC,KAAV,EAAiB,CAClB;AAEP,KAXD,EAWGC,OAXH,CAWW,YAAY,CACf;AACP,KAbD;AAeH,GAtBQ,EAsBN,EAtBM,CAAT;AAyBA,sBACI,uDACI;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEG,oBAAC,SAAD;AACP,IAAA,KAAK,EAAE,IADA;AAEP,IAAA,MAAM,EAAE,GAFD;AAGP,IAAA,IAAI,EAAEjB,UAHC;AAIP,IAAA,MAAM,EAAE;AACNkB,MAAAA,GAAG,EAAE,CADC;AACEC,MAAAA,KAAK,EAAE,EADT;AACaC,MAAAA,IAAI,EAAE,EADnB;AACuBC,MAAAA,MAAM,EAAE;AAD/B,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQP,oBAAC,aAAD;AAAe,IAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARO,eASP,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATO,eAUP,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVO,eAWP,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXO,eAYP,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZO,eAcP,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,OAA9B;AAAsC,IAAA,MAAM,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdO,CAFH,CADJ,CADJ;AAwBH;;AAED,eAAevB,kBAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\nconst axios = require('axios');\n\nfunction ClientTrackerChart(props) {\n    const [trackStats, setTrackStats] = useState([]);\n    const [clientId, setClientId] = useState(props.clientId);\n\n    useEffect((props) => {\n\n        const search = window.location.search;\n        const params = new URLSearchParams(search);\n        const clientUrl = params.get('client');\n      \n        //We call the api\n        axios.get('http://localhost:8011/client-tracker/tracks-stats/'+clientUrl, {\n            headers: {\n            }\n        }\n        ).then(function (response) {\n\n            setTrackStats(response.data);\n        \n        }).catch(function (error) {\n                // handle error\n\n        }).finally(function () {\n                // always executed\n        });\n        \n    }, []);\n\n\n    return (\n        <>\n            <div class='container'>\n\n               <LineChart\n        width={1000}\n        height={300}\n        data={trackStats}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n      \n        <Line type=\"monotone\" dataKey=\"value\" stroke=\"#82ca9d\" />\n      </LineChart>\n\n            </div>\n        </>\n    );\n}\n\nexport default ClientTrackerChart;"]},"metadata":{},"sourceType":"module"}