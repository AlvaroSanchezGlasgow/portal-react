{"ast":null,"code":"var _jsxFileName = \"/Users/alvarosanchezgalvan/Desktop/WorkSpace/poc-portal/src/ClientAdmin/ClientTrackerChart.js\";\nimport React, { useEffect, useState } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Label } from 'recharts';\n\nconst axios = require('axios');\n\nfunction ClientTrackerChart(props) {\n  const [trackStats, setTrackStats] = useState([]);\n  const [clientId, setClientId] = useState(props.clientId);\n  useEffect(props => {\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    const clientUrl = params.get('client'); //We call the api\n\n    axios.get('http://localhost:8011/client-tracker/tracks-stats/' + clientUrl, {\n      headers: {}\n    }).then(function (response) {\n      setTrackStats(response.data);\n    }).catch(function (error) {// handle error\n    }).finally(function () {// always executed\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AreaChart, {\n    width: 450,\n    height: 450,\n    data: trackStats,\n    margin: {\n      top: 10,\n      right: 30,\n      left: 0,\n      bottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"colorUv\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"5%\",\n    stopColor: \"#9aae04\",\n    stopOpacity: 0.8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"95%\",\n    stopColor: \"#9aae04\",\n    stopOpacity: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    value: \"Type of Contact\",\n    offset: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Area, {\n    type: \"monotone\",\n    dataKey: \"value\",\n    stroke: \"#9aae04\",\n    fillOpacity: 1,\n    fill: \"url(#colorUv)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default ClientTrackerChart;","map":{"version":3,"sources":["/Users/alvarosanchezgalvan/Desktop/WorkSpace/poc-portal/src/ClientAdmin/ClientTrackerChart.js"],"names":["React","useEffect","useState","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Label","axios","require","ClientTrackerChart","props","trackStats","setTrackStats","clientId","setClientId","search","window","location","params","URLSearchParams","clientUrl","get","headers","then","response","data","catch","error","finally","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport {\n    AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Label,\n  } from 'recharts';\nconst axios = require('axios');\n\nfunction ClientTrackerChart(props) {\n    const [trackStats, setTrackStats] = useState([]);\n    const [clientId, setClientId] = useState(props.clientId);\n\n    useEffect((props) => {\n\n        const search = window.location.search;\n        const params = new URLSearchParams(search);\n        const clientUrl = params.get('client');\n      \n        //We call the api\n        axios.get('http://localhost:8011/client-tracker/tracks-stats/'+clientUrl, {\n            headers: {\n            }\n        }\n        ).then(function (response) {\n\n            setTrackStats(response.data);\n        \n        }).catch(function (error) {\n                // handle error\n\n        }).finally(function () {\n                // always executed\n        });\n        \n    }, []);\n\n\n    return (\n      <>\n        <div class=\"container\">\n          <AreaChart\n            width={450}\n            height={450}\n            data={trackStats}\n            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n          >\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#9aae04\" stopOpacity={0.8} />\n                <stop offset=\"95%\" stopColor=\"#9aae04\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis dataKey=\"name\" />\n            <Label value=\"Type of Contact\" offset={0}  />\n            <YAxis />\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <Tooltip />\n            <Area\n              type=\"monotone\"\n              dataKey=\"value\"\n              stroke=\"#9aae04\"\n              fillOpacity={1}\n              fill=\"url(#colorUv)\"\n            />\n          </AreaChart>\n        </div>\n      </>\n    );\n}\n\nexport default ClientTrackerChart;"]},"metadata":{},"sourceType":"module"}