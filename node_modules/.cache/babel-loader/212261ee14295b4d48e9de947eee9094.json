{"ast":null,"code":"var _jsxFileName = \"C:\\\\personal_workspace\\\\portal-react\\\\src\\\\TrackerAdmin\\\\ClientTrackerChart.js\";\nimport React, { useEffect, useState } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Label } from 'recharts';\n\nconst axios = require('axios');\n\nfunction ClientTrackerChart(props) {\n  const [trackStats, setTrackStats] = useState([]);\n  useEffect(props => {\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    const clientUrl = params.get('client'); //We call the api\n\n    axios.get(`${process.env.REACT_APP_API_ROOT_URL}/client-tracker/tracks-stats/` + clientUrl, {\n      headers: {\n        Authorization: \"Bearer \" + sessionStorage.getItem(\"user_token\")\n      }\n    }).then(function (response) {\n      setTrackStats(response.data);\n    }).catch(function (error) {// handle error\n    }).finally(function () {// always executed\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AreaChart, {\n    width: 450,\n    height: 450,\n    data: trackStats,\n    margin: {\n      top: 10,\n      right: 30,\n      left: 0,\n      bottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"colorUv\",\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"5%\",\n    stopColor: \"#9aae04\",\n    stopOpacity: 0.8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: \"95%\",\n    stopColor: \"#9aae04\",\n    stopOpacity: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    value: \"Type of Contact\",\n    offset: 0,\n    position: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Area, {\n    type: \"monotone\",\n    dataKey: \"activities\",\n    stroke: \"#9aae04\",\n    fillOpacity: 1,\n    fill: \"url(#colorUv)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default ClientTrackerChart;","map":{"version":3,"sources":["C:/personal_workspace/portal-react/src/TrackerAdmin/ClientTrackerChart.js"],"names":["React","useEffect","useState","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Label","axios","require","ClientTrackerChart","props","trackStats","setTrackStats","search","window","location","params","URLSearchParams","clientUrl","get","process","env","REACT_APP_API_ROOT_URL","headers","Authorization","sessionStorage","getItem","then","response","data","catch","error","finally","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport {\r\n    AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Label,\r\n  } from 'recharts';\r\nconst axios = require('axios');\r\n\r\nfunction ClientTrackerChart(props) {\r\n    const [trackStats, setTrackStats] = useState([]);\r\n   \r\n    useEffect((props) => {\r\n\r\n        const search = window.location.search;\r\n        const params = new URLSearchParams(search);\r\n        const clientUrl = params.get('client');\r\n      \r\n        //We call the api\r\n        axios.get(`${process.env.REACT_APP_API_ROOT_URL}/client-tracker/tracks-stats/`+clientUrl, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + sessionStorage.getItem(\"user_token\"),\r\n          }\r\n        }\r\n        ).then(function (response) {\r\n\r\n            setTrackStats(response.data);\r\n        \r\n        }).catch(function (error) {\r\n                // handle error\r\n\r\n        }).finally(function () {\r\n                // always executed\r\n        });\r\n        \r\n    }, []);\r\n\r\n\r\n    return (\r\n      <>\r\n      \r\n          <AreaChart\r\n            width={450}\r\n            height={450}\r\n            data={trackStats}\r\n            margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n          >\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#9aae04\" stopOpacity={0.8} />\r\n                <stop offset=\"95%\" stopColor=\"#9aae04\" stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <XAxis dataKey=\"name\" layout=\"vertical\"/>\r\n            <Label value=\"Type of Contact\" offset={0} position=\"top\" />\r\n            <YAxis />\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <Tooltip />\r\n            <Area\r\n              type=\"monotone\"\r\n              dataKey=\"activities\"\r\n              stroke=\"#9aae04\"\r\n              fillOpacity={1}\r\n              fill=\"url(#colorUv)\"\r\n            />\r\n          </AreaChart>\r\n        \r\n      </>\r\n    );\r\n}\r\n\r\nexport default ClientTrackerChart;"]},"metadata":{},"sourceType":"module"}